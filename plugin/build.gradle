group rootProject.group
version rootProject.version

compileKotlin {
    kotlinOptions {
        useIR = true
        jvmTarget = "1.8"
        languageVersion = "1.4"
        freeCompilerArgs += ["-Xno-optimized-callable-references",]
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'com.googlecode.streamflyer:streamflyer-core:1.1.3'
    compile 'com.googlecode.streamflyer-regex-fast:streamflyer-regex-fast:1.0.1'
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin/'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

def pomConfig = {
    licenses {
        license {
            name 'The Apache Software License, Version 2.0'
            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            distribution 'repo'
        }
    }
}

publishing {
    repositories {
        maven {
            credentials {
                username = "$ossrhUsername"
                password = "$ossrhPassword"
            }

            //"https://s01.oss.sonatype.org/service/local/"
            url  = "https://s01.oss.sonatype.org/content/repositories/releases/"
        }
    }

    publications {
        MiraklePublication(MavenPublication) {
            from components.java

            artifact sourcesJar

            groupId 'io.github.adambl4'
            artifactId 'mirakle'
            version rootProject.version

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'Gradle plugin to move build process from local to a remote machine.')
                root.appendNode('name', 'Mirakle')
                root.appendNode('url', 'https://github.com/adambl4/mirakle')
                root.children().last() + pomConfig
            }
        }
    }
}

signing {
    sign publishing.publications.MiraklePublication
}

task validatePublishing {
    doLast {
        validateTagAndVersion()
        if (gradle.startParameter.configureOnDemand)
            //WTF https://stackoverflow.com/questions/25668020/gradle-artifactory-plugin-not-generating-pom-file/32064236#comment61270226_32064236
            throw new Exception("Can't upload to bintray with enabled configureOnDemand")
    }
}

publish.dependsOn validatePublishing